/*
 *  THIS PROGRAM IS DESIGNED TO WORK
 */

import mod::hello;
import mod::hi;

// pub inline func stringFn(s: str) {}
pub inline func stringFn(s: str) -> str { return "YES"; }
pub unsafe func fn(l: i32) -> u32 {
    return u32(l);
}
pub func fn2(l: i32?) -> u32 {
    return u32(l!);
}
pub func fn3$(l: bool?) -> func(str) {
    return func(x: str){};
}

// yeah boi
pub func main(l: str) {
    if true {
            let x: i32 = 100;

            let mut y = 1;
            y = 69;

            stringFn("Hello");
            hello();
            unsafe {
                fn(1337);
            }
            let x2: str? = "500";
            let y2: i32? = i32?(x2);
            fn2(null!);
            (fn3$("null"~))();
            let mut a: str? = null;
            a = stringFn->str("no");
            let mut b = x2~;
            b = false;
            hello();
            let closure: func(i32, i32) -> void = func main(str);
    }
}
